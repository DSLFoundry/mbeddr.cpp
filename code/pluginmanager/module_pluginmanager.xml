<?xml version="1.0" encoding="UTF-8"?>
<project name="module_pluginmanager" default="compile.module.pluginmanager">
  <dirname property="module.pluginmanager.basedir" file="${ant.file.module_pluginmanager}"/>
  
  <property name="module.jdk.home.pluginmanager" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.pluginmanager" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.pluginmanager" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.pluginmanager" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>
  
  <property name="pluginmanager.output.dir" value="${module.pluginmanager.basedir}/out/production/pluginmanager"/>
  <property name="pluginmanager.testoutput.dir" value="${module.pluginmanager.basedir}/out/test/pluginmanager"/>
  
  <path id="pluginmanager.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="pluginmanager.module.production.classpath">
    <path refid="${module.jdk.classpath.pluginmanager}"/>
    <path refid="library.mps33.classpath"/>
  </path>
  
  <path id="pluginmanager.runtime.production.module.classpath">
    <pathelement location="${pluginmanager.output.dir}"/>
  </path>
  
  <path id="pluginmanager.module.classpath">
    <path refid="${module.jdk.classpath.pluginmanager}"/>
    <pathelement location="${pluginmanager.output.dir}"/>
    <path refid="library.mps33.classpath"/>
  </path>
  
  <path id="pluginmanager.runtime.module.classpath">
    <pathelement location="${pluginmanager.testoutput.dir}"/>
    <pathelement location="${pluginmanager.output.dir}"/>
    <path refid="library.mps33.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.pluginmanager">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.pluginmanager">
    <patternset refid="excluded.from.module.pluginmanager"/>
  </patternset>
  
  <path id="pluginmanager.module.sourcepath">
    <dirset dir="${module.pluginmanager.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.pluginmanager" depends="compile.module.pluginmanager.production,compile.module.pluginmanager.tests" description="Compile module pluginmanager"/>
  
  <target name="compile.module.pluginmanager.production" depends="register.custom.compilers" description="Compile module pluginmanager; production classes">
    <mkdir dir="${pluginmanager.output.dir}"/>
    <javac2 target="1.6" source="1.6" destdir="${pluginmanager.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.pluginmanager}/javac">
      <compilerarg line="${compiler.args.pluginmanager}"/>
      <bootclasspath refid="pluginmanager.module.bootclasspath"/>
      <classpath refid="pluginmanager.module.production.classpath"/>
      <src refid="pluginmanager.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.pluginmanager"/>
    </javac2>
    
    <copy todir="${pluginmanager.output.dir}">
      <fileset dir="${module.pluginmanager.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.pluginmanager.tests" depends="register.custom.compilers,compile.module.pluginmanager.production" description="compile module pluginmanager; test classes" unless="skip.tests"/>
  
  <target name="clean.module.pluginmanager" description="cleanup module">
    <delete dir="${pluginmanager.output.dir}"/>
    <delete dir="${pluginmanager.testoutput.dir}"/>
  </target>
  
  <property name="pluginmanager.plugin.path.jar" value="${module.pluginmanager.basedir}/pluginmanager.jar"/>
  
  <!-- Build archive for plugin 'pluginmanager' -->
  <target name="plugin.build.jar.pluginmanager" depends="compile.module.pluginmanager" description="Build plugin archive for module &#39;pluginmanager&#39;">
    <jar destfile="${pluginmanager.plugin.path.jar}" duplicate="preserve">
      <zipfileset dir="${module.pluginmanager.basedir}/out/production/pluginmanager"/>
      <zipfileset file="${module.pluginmanager.basedir}/META-INF/plugin.xml" prefix="META-INF"/>
      <manifest>
        <attribute name="Created-By" value="IntelliJ IDEA"/>
        <attribute name="Manifest-Version" value="1.0"/>
      </manifest>
    </jar>
  </target>
</project>